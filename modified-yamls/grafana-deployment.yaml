apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert --out yamls
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert --out yamls
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/docker-compose-to-kubernetes-default: "true"
        io.kompose.service: grafana
    spec:
      initContainers:
        - name: init-grafana
          image: busybox:1.28
          command:
            [
              "sh",
              "-c",
              "cat /temp/datasources.yml > /etc/grafana/provisioning/datasources/datasources.yml",
            ]
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-claim
              readOnly: false
            - mountPath: /temp/
              name: grafana-yml
      containers:
        - env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: grafana
            - name: GF_SECURITY_ADMIN_USER
              value: admin
          image: grafana/grafana
          name: grafana
          ports:
            - containerPort: 3000
              hostPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-claim
      restartPolicy: Always
      volumes:
        - name: grafana-claim
          persistentVolumeClaim:
            claimName: grafana-claim0
        - name: grafana-yml
          configMap:
            name: grafana-yml
            items:
              - key: datasources.yml
                path: datasources.yml
